Code : Stack Using LL
Send Feedback
Implement a Stack Data Structure specifically to store integer data using a Singly Linked List.
The data members should be private.
You need to implement the following public functions :
1. Constructor:
It initialises the data members as required.
2. push(data) :
This function should take one argument of type integer. It pushes the element into the stack and returns nothing.
3. pop() :
It pops the element from the top of the stack and in turn, returns the element being popped or deleted. In case the stack is empty, it returns -1.
4. top :
It returns the element being kept at the top of the stack. In case the stack is empty, it returns -1.
5. size() :
It returns the size of the stack at any given instance of time.
6. isEmpty() :
It returns a boolean value indicating whether the stack is empty or not.
===================================================================================================================================================
ANSWER 1:

class Stack {
	// Define the data members
    Node *head=NULL;
    int size;
   public:
    Stack() {
        // Implement the Constructor
        head=NULL;
        size=0;
    }

	/*----------------- Public Functions of Stack -----------------*/

    int getSize() {
        // Implement the getSize() function
        return size;
    }

    bool isEmpty() {
        // Implement the isEmpty() function
        if(head==NULL)
            return true;
        else
            return false;
    }

    void push(int element) {
        // Implement the push() function
    
       Node *newnode=new Node(element);
        if(head==NULL)
        {
            head=newnode;
        }
        else
        {
            newnode->next=head;
            head=newnode;
        }
        size++;
    }

    int pop() {
        // Implement the pop() function
        if(head==NULL)
            return -1 ;
        else
        {Node *ans=head;
         head=head->next;
         int data=ans->data;
         delete ans;
         size--;
         return data;
         
        }
    }

    int top() {
        // Implement the top() function
        if(head==NULL)
            return -1;
        else
        {
            return head->data;
        }
    }
};
================================================================================================================================================================================
