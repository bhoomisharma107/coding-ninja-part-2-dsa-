//IMPLEMNTATION OF MERGE SORT//
#include <iostream>

using namespace std;
void merge(int array[],int low,int mid,int high)
{
    int size1=mid-low+1;
    int size2=high-mid;
    int leftarray[size1];
    int rightarray[size2];
    for(int i=0;i<size1;i++)
    {
        leftarray[i]=array[low+i];
    }
    for(int i=0;i<size2;i++)
    {
        rightarray[i]=array[mid+1+i];
    }
   int i=0;
   int j=0;
   int k=low;
   while(i<size1 && j<size2)
   {
       if(leftarray[i]<rightarray[j])
       {
           array[k]=leftarray[i];
           i++;
           k++;
           
       }
       else
       {
           array[k]=rightarray[j];
           j++;
           k++;
           
       }
   }
   while(i<size1)
   {
       array[k]=leftarray[i];
       k++;
       i++;
   }
   while(j<size2)
   {
       array[k]=rightarray[j];
       k++;
       j++;
   }
   
}

void mergesort(int array[],int low,int high)
{
   
    if(low<high)
    {
        int mid=(low+high)/2;
        mergesort(array,low,mid);
        mergesort(array,mid+1,high);
        merge(array,low,mid,high);
    }
}
int main()
{
    int n;
    cout<<"enter the elements of the array"<<endl;
    cin>>n;
    int A[n];
    cout<<"enter the elements of the array"<<endl;
    for(int i=0;i<n;i++)
    {
        cin>>A[i];
    }
    mergesort(A,0,n-1);
    cout<<"array after sorting is"<<endl;
    for(int i=0;i<n;i++)
    {
        cout<<A[i]<<endl;
    }
}
